apiVersion: v1
kind: Service
metadata:
  labels:
    app: zigbee2mqtt
  name: zigbee2mqtt
  namespace: zigbee2mqtt
spec:
  ports:
    - name: "8099"
      port: 8099
      targetPort: 8099
  selector:
    app: zigbee2mqtt
  type: NodePort
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: zigbee-pv
  namespace: zigbee2mqtt
spec:
  storageClassName: zigbee2mqtt-sc
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  mountOptions:
    - nfsvers=4
  nfs:
    server: gluster
    path: "/nfs/cluster/zigbee2mqtt"
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zigbee-pvc
  namespace: zigbee2mqtt
spec:
  storageClassName: zigbee2mqtt-sc
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zigbee2mqtt
  name: zigbee2mqtt
  namespace: zigbee2mqtt
spec:
  replicas: 2
  selector:
    matchLabels:
      app: zigbee2mqtt
  template:
    metadata:
      labels:
        app: zigbee2mqtt
    spec:
      initContainers:
        - name: init-broker  #check broker mqtt
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until nc -z 192.168.50.130 1883 > /dev/null; do echo Waiting for broker.; sleep 2; done;"]
      containers:
        - env:
            - name: TZ
              value: Europe/Rome
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: koenkk/zigbee2mqtt:1.33.0
          name: zigbee2mqtt
          ports:
            - containerPort: 8099
          volumeMounts:
            - mountPath: /app/data
              name: nfs
            - mountPath: /run/udev
              name: zigbee2mqtt-hostpath1
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: zigbee2mqtt-hostpath1
          hostPath:
            path: /run/udev
        - name: nfs
          persistentVolumeClaim:
            claimName: zigbee-pvc
